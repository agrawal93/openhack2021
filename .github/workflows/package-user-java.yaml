# This is a basic workflow to help you get started with Actions

name: Package Java User Project

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "package"
  package:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Project
        uses: actions/checkout@v2

#       - name: Build and Push Docker Image
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#           registry: openhack3mg4iju8acr.azurecr.io
#           repository: team-3/user-java
#           tags: latest,${{ github.sha }}
#           dockerfile: apis/user-java/Dockerfile
#           path: apis/user-java

  deploy:
    needs: [ package ]
    runs-on: ubuntu-latest
    steps:
#       - name: Deploy User-Java Project on Stage
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: 'openhack3mg4iju8userjava'
#           publish-profile: ${{ secrets.OH_UJ_PUBLISH_PROFILE_STAGE }}
#           images: 'openhack3mg4iju8acr.azurecr.io/team-3/user-java:${{ github.sha }}'
#           slot-name: staging
    
      - id: stage_healthcheck
        name: Validate Stage Healthcheck
        run: |
          status=$(curl -sS "http://openhack3mg4iju8userjava-staging.azurewebsites.net/api/healthcheck/user-java" | jq .status)
          echo "${status}"
          echo "::set-output name=STATUS::${status}"
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Promote Deployment - Swap Stage with Production
        uses: azure/CLI@v1
        if: steps.stage_healthcheck.outputs.STATUS == '"healthy"'
        with:
          azcliversion: 2.18.0
          inlineScript: |
            az webapp deployment slot swap \
              -g openhack3mg4iju8rg \
              -n openhack3mg4iju8userjava \
              --slot staging \
              --target-slot production

      - id: prod_healthcheck
        name: Validate Production Healthcheck
        run: |
          status=$(curl -sS "http://openhack3mg4iju8userjava.azurewebsites.net/api/healthcheck/user-java" | jq .status)
          echo "${status}"
          echo "::set-output name=STATUS::${status}"

      - name: Rollback Deployment - Swap Production with Stage
        uses: azure/CLI@v1
        if: steps.prod_healthcheck.outputs.STATUS != '"healthy"'
        with:
          azcliversion: 2.18.0
          inlineScript: |
            az webapp deployment slot swap \
              -g openhack3mg4iju8rg \
              -n openhack3mg4iju8userjava \
              --slot staging \
              --target-slot production
